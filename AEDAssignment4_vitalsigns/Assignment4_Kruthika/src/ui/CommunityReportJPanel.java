/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import model.Patient;
import model.VitalSigns;

/**
 *
 * @author kruthika
 */
public class CommunityReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityReportJPanel
     */
    public CommunityReportJPanel() {
        initComponents();
        Map<Integer, Integer> result = new HashMap<Integer, Integer>();
        Map<Patient, ArrayList<VitalSigns>> map = Patient.getEncounterHistory();
        for (Patient p : map.keySet()) {
            int communityId = p.getCommunity().getCId();
            if (isThisVitalSignNormal(p)) {
                if (result.containsKey(communityId)) {
                    continue;
                }
                result.put(communityId, 0);
            } else {
                if (result.containsKey(communityId)) {
                    result.put(communityId, result.get(communityId) + 1);
                } else {
                    result.put(communityId, 1);
                }
            }
        }
        String[] columns = {"Community ID", "People with Abnormal Vitals"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        for (int i : result.keySet()) {
            Vector<String> row = new Vector<String>();
                row.add(String.valueOf(i));
                row.add(result.get(i).toString());
                model.addRow(row);
//            System.out.println("CommunityId: " + i + " No of patients with abnormal blood pressure: " + result.get(i));
        }
        communityTable.setModel(model);

    }

    public static boolean isThisVitalSignNormal(Patient p) {

        Map<Patient, ArrayList<VitalSigns>> encoutersSign = Patient.getEncounterHistory();
        ArrayList<VitalSigns> result = encoutersSign.get(p);

        int n = result.size() - 1;

        if (n + 1 == 0) {
            System.out.println("No Patient records");
        }
        Double sysBP = result.get(n).getSysBP();
        int age = result.get(n).getAge();

        if (age == 0 && (sysBP > 70 || sysBP < 50)) {
            return false;
        } else if ((age > 0 && age <= 12) && (sysBP < 70 || sysBP > 100)) {
            return false;
        } else if ((age > 12 && age <= 60) && (sysBP < 80 || sysBP > 110)) {
            return false;
        } else if ((age > 60 && age <= 144) && (sysBP < 80 || sysBP > 120)) {
            return false;
        } else if ((age > 144) && (sysBP < 110 || sysBP > 120)) {
            return false;
        }

        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        personDetails = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        communityTable = new javax.swing.JTable();
        populatePersons = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cid = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 204));

        personDetails.setBackground(new java.awt.Color(153, 153, 153));
        personDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Number", "Community", "Date of Birth"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(personDetails);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Community Report");

        communityTable.setBackground(new java.awt.Color(153, 153, 153));
        communityTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        communityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Community ID", "People with Abnormal Vitals"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(communityTable);

        populatePersons.setBackground(new java.awt.Color(0, 0, 0));
        populatePersons.setForeground(new java.awt.Color(255, 255, 255));
        populatePersons.setText("Details");
        populatePersons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populatePersonsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Enter Community ID:");

        cid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel3)
                        .addGap(68, 68, 68)
                        .addComponent(cid, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(populatePersons))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(jLabel2)))
                .addContainerGap(541, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(populatePersons)
                    .addComponent(jLabel3)
                    .addComponent(cid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(277, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(541, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(372, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidActionPerformed

    private void populatePersonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populatePersonsActionPerformed
        TableModel det = communityTable.getModel();
        int selectedRow = communityTable.getSelectedRow();
        System.out.println(selectedRow);
        System.out.println(cid.getText());
        Integer communityId =Integer.parseInt(cid.getText());
        //        Integer communityId =Integer.parseInt(cid.);
        System.out.println(communityId);
        Map<Patient, ArrayList<VitalSigns>> map = Patient.getEncounterHistory();
        Iterator<Patient> ite = map.keySet().iterator();
        //         personDetails.removeAll();
        DefaultTableModel  temp = (DefaultTableModel)personDetails.getModel();
        temp.setRowCount(0);
        //         JTable table = new JTable(temp);
        while(ite.hasNext()){
            Patient p = ite.next();
            if(p.getCommunity().getCId() == communityId){
                Object[] row = new Object[4];
                row[0]= p.getPatientName();
                row[1]= p.getPatientId();
                row[2]= p.getCommunity();
                row[3]=p.getDob();
                temp.addRow(row);
            }
        }
        //         personDetails.setModel(temp);

    }//GEN-LAST:event_populatePersonsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cid;
    private javax.swing.JTable communityTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable personDetails;
    private javax.swing.JButton populatePersons;
    // End of variables declaration//GEN-END:variables
}
